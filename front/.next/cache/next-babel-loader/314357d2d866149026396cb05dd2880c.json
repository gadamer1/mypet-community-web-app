{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uC6B0\\uD76C\\uC900\\\\webdev\\\\mypet-community-web-app\\\\front\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport withRedux from \"next-redux-wrapper\";\nimport withReduxSaga from \"next-redux-saga\";\nimport { Provider } from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport MainLayout from \"../components/Layouts/MainLayout\";\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\n\nconst MyPet = ({\n  Component,\n  store,\n  pageProps\n}) => {\n  return __jsx(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(MainLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(Component, _extends({}, pageProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }))));\n};\n\nMyPet.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  pageProps: PropTypes.object.isRequired\n};\n\nMyPet.getInitialProps = async context => {\n  let pageProps = {};\n  const {\n    ctx,\n    Component\n  } = context;\n\n  if (Component.getInitialProps) {\n    pageProps = await Component.getInitialProps(ctx);\n  }\n\n  return {\n    pageProps\n  };\n};\n\nconst configureStore = (initialState, options) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancer = process.env.NODE_ENV === \"production\" ? compose(applyMiddleware(...middlewares)) : compose(applyMiddleware(...middlewares), !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== \"undefined\" ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f);\n  const store = createStore(reducer, initialState, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(withReduxSaga(MyPet));","map":{"version":3,"sources":["C:\\Users\\우희준\\webdev\\mypet-community-web-app\\front\\pages\\_app.js"],"names":["React","PropTypes","withRedux","withReduxSaga","Provider","createSagaMiddleware","applyMiddleware","compose","createStore","MainLayout","reducer","rootSaga","MyPet","Component","store","pageProps","propTypes","elementType","isRequired","object","getInitialProps","context","ctx","configureStore","initialState","options","sagaMiddleware","middlewares","enhancer","process","env","NODE_ENV","isServer","window","__REDUX_DEVTOOLS_EXTENSION__","f","sagaTask","run"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AACA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,KAAb;AAAoBC,EAAAA;AAApB,CAAD,KAAqC;AACjD,SACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,CADF;AAOD,CARD;;AAUAH,KAAK,CAACI,SAAN,GAAkB;AAChBH,EAAAA,SAAS,EAAEZ,SAAS,CAACgB,WAAV,CAAsBC,UADjB;AAEhBH,EAAAA,SAAS,EAAEd,SAAS,CAACkB,MAAV,CAAiBD;AAFZ,CAAlB;;AAKAN,KAAK,CAACQ,eAAN,GAAwB,MAAMC,OAAN,IAAiB;AACvC,MAAIN,SAAS,GAAG,EAAhB;AACA,QAAM;AAAEO,IAAAA,GAAF;AAAOT,IAAAA;AAAP,MAAqBQ,OAA3B;;AACA,MAAIR,SAAS,CAACO,eAAd,EAA+B;AAC7BL,IAAAA,SAAS,GAAG,MAAMF,SAAS,CAACO,eAAV,CAA0BE,GAA1B,CAAlB;AACD;;AACD,SAAO;AAAEP,IAAAA;AAAF,GAAP;AACD,CAPD;;AASA,MAAMQ,cAAc,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA2B;AAChD,QAAMC,cAAc,GAAGrB,oBAAoB,EAA3C;AACA,QAAMsB,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,QAAME,QAAQ,GACZC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACIxB,OAAO,CAACD,eAAe,CAAC,GAAGqB,WAAJ,CAAhB,CADX,GAEIpB,OAAO,CACLD,eAAe,CAAC,GAAGqB,WAAJ,CADV,EAEL,CAACF,OAAO,CAACO,QAAT,IACE,OAAOC,MAAM,CAACC,4BAAd,KAA+C,WADjD,GAEID,MAAM,CAACC,4BAAP,EAFJ,GAGIC,CAAC,IAAIA,CALJ,CAHb;AAWA,QAAMrB,KAAK,GAAGN,WAAW,CAACE,OAAD,EAAUc,YAAV,EAAwBI,QAAxB,CAAzB;AACAd,EAAAA,KAAK,CAACsB,QAAN,GAAiBV,cAAc,CAACW,GAAf,CAAmB1B,QAAnB,CAAjB;AACA,SAAOG,KAAP;AACD,CAjBD;;AAmBA,eAAeZ,SAAS,CAACqB,cAAD,CAAT,CAA0BpB,aAAa,CAACS,KAAD,CAAvC,CAAf","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport withRedux from \"next-redux-wrapper\";\r\nimport withReduxSaga from \"next-redux-saga\";\r\nimport { Provider } from \"react-redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { applyMiddleware, compose, createStore } from \"redux\";\r\nimport MainLayout from \"../components/Layouts/MainLayout\";\r\nimport reducer from \"../reducers\";\r\nimport rootSaga from \"../sagas\";\r\nconst MyPet = ({ Component, store, pageProps }) => {\r\n  return (\r\n    <Provider store={store}>\r\n      <MainLayout>\r\n        <Component {...pageProps} />\r\n      </MainLayout>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nMyPet.propTypes = {\r\n  Component: PropTypes.elementType.isRequired,\r\n  pageProps: PropTypes.object.isRequired\r\n};\r\n\r\nMyPet.getInitialProps = async context => {\r\n  let pageProps = {};\r\n  const { ctx, Component } = context;\r\n  if (Component.getInitialProps) {\r\n    pageProps = await Component.getInitialProps(ctx);\r\n  }\r\n  return { pageProps };\r\n};\r\n\r\nconst configureStore = (initialState, options) => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middlewares = [sagaMiddleware];\r\n  const enhancer =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? compose(applyMiddleware(...middlewares))\r\n      : compose(\r\n          applyMiddleware(...middlewares),\r\n          !options.isServer &&\r\n            typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== \"undefined\"\r\n            ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n            : f => f\r\n        );\r\n\r\n  const store = createStore(reducer, initialState, enhancer);\r\n  store.sagaTask = sagaMiddleware.run(rootSaga);\r\n  return store;\r\n};\r\n\r\nexport default withRedux(configureStore)(withReduxSaga(MyPet));\r\n"]},"metadata":{},"sourceType":"module"}