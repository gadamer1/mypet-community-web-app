{"ast":null,"code":"import produce from \"immer\";\nimport { LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from \"./actions\";\nimport { LOAD_POSTS_FAILURE } from \"../post/actions\";\nconst initialState = {\n  user: null\n};\nexport default ((state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LOAD_USER_REQUEST:\n        {\n          break;\n        }\n\n      case LOAD_USER_SUCCESS:\n        {\n          draft.user = action.data;\n        }\n\n      case LOAD_POSTS_FAILURE:\n        {\n          break;\n        }\n\n      case LOGIN_REQUEST:\n        {\n          break;\n        }\n\n      case LOGIN_SUCCESS:\n        {\n          draft.user = action.data;\n        }\n\n      case LOGIN_FAILURE:\n        {\n          break;\n        }\n\n      case SIGN_UP_REQUEST:\n        {\n          break;\n        }\n\n      case SIGN_UP_SUCCESS:\n        {\n          draft.user = action.data;\n        }\n\n      case SIGN_UP_FAILURE:\n        {\n          break;\n        }\n\n      default:\n        {\n          break;\n        }\n    }\n  });\n});","map":{"version":3,"sources":["D:\\webdev\\mypet-community-web-app\\front\\reducers\\user\\user.js"],"names":["produce","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOAD_POSTS_FAILURE","initialState","user","state","action","draft","type","data"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,EAA+CC,aAA/C,EAA8DC,aAA9D,EAA6EC,aAA7E,EAA4FC,eAA5F,EAA6GC,eAA7G,EAA8HC,eAA9H,QAAqJ,WAArJ;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AADa,CAArB;AAIA,gBAAe,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC/C,SAAOb,OAAO,CAACY,KAAD,EAAQE,KAAK,IAAI;AAC7B,YAAQD,MAAM,CAACE,IAAf;AACE,WAAKd,iBAAL;AAAwB;AACtB;AACD;;AACD,WAAKC,iBAAL;AAAwB;AACtBY,UAAAA,KAAK,CAACH,IAAN,GAAaE,MAAM,CAACG,IAApB;AACD;;AACD,WAAKP,kBAAL;AAAyB;AACvB;AACD;;AACD,WAAKN,aAAL;AAAoB;AAClB;AACD;;AACD,WAAKC,aAAL;AAAoB;AAClBU,UAAAA,KAAK,CAACH,IAAN,GAAaE,MAAM,CAACG,IAApB;AACD;;AACD,WAAKX,aAAL;AAAoB;AAClB;AACD;;AACD,WAAKC,eAAL;AAAsB;AACpB;AACD;;AACD,WAAKC,eAAL;AAAsB;AACpBO,UAAAA,KAAK,CAACH,IAAN,GAAaE,MAAM,CAACG,IAApB;AACD;;AACD,WAAKR,eAAL;AAAsB;AACpB;AACD;;AACD;AAAQ;AACN;AACD;AA9BH;AAgCD,GAjCa,CAAd;AAkCD,CAnCD","sourcesContent":["import produce from \"immer\";\r\nimport { LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from \"./actions\";\r\nimport { LOAD_POSTS_FAILURE } from \"../post/actions\";\r\n\r\nconst initialState = {\r\n  user: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  return produce(state, draft => {\r\n    switch (action.type) {\r\n      case LOAD_USER_REQUEST: {\r\n        break;\r\n      }\r\n      case LOAD_USER_SUCCESS: {\r\n        draft.user = action.data;\r\n      }\r\n      case LOAD_POSTS_FAILURE: {\r\n        break;\r\n      }\r\n      case LOGIN_REQUEST: {\r\n        break;\r\n      }\r\n      case LOGIN_SUCCESS: {\r\n        draft.user = action.data;\r\n      }\r\n      case LOGIN_FAILURE: {\r\n        break;\r\n      }\r\n      case SIGN_UP_REQUEST: {\r\n        break;\r\n      }\r\n      case SIGN_UP_SUCCESS: {\r\n        draft.user = action.data;\r\n      }\r\n      case SIGN_UP_FAILURE: {\r\n        break;\r\n      }\r\n      default:{\r\n        break;\r\n      }\r\n    }\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}