{"ast":null,"code":"import { all, fork, put, call, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { LOAD_POSTS_REQUEST, LOAD_POSTS_FAILURE, LOAD_POSTS_SUCCESS } from \"../reducers/post/actions\";\n\nfunction loadPostsAPI() {\n  return axios.get(\"/posts\");\n}\n\nfunction* loadPosts() {\n  try {\n    const result = yield call(loadPostsAPI);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOAD_POSTS_FAILURE\n    });\n  }\n}\n\nfunction* watchLoadPosts() {\n  takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchLoadPosts)]);\n}","map":{"version":3,"sources":["D:\\webdev\\mypet-community-web-app\\front\\sagas\\post.js"],"names":["all","fork","put","call","takeLatest","axios","LOAD_POSTS_REQUEST","LOAD_POSTS_FAILURE","LOAD_POSTS_SUCCESS","loadPostsAPI","get","loadPosts","result","type","data","e","console","error","watchLoadPosts","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,kBADF,EAEEC,kBAFF,EAGEC,kBAHF,QAIO,0BAJP;;AAMA,SAASC,YAAT,GAAwB;AACtB,SAAOJ,KAAK,CAACK,GAAN,CAAU,QAAV,CAAP;AACD;;AAED,UAAUC,SAAV,GAAsB;AACpB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMT,IAAI,CAACM,YAAD,CAAzB;AACA,UAAMP,GAAG,CAAC;AACRW,MAAAA,IAAI,EAAEL,kBADE;AAERM,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMb,GAAG,CAAC;AACRW,MAAAA,IAAI,EAAEN;AADE,KAAD,CAAT;AAGD;AACF;;AAED,UAAUW,cAAV,GAA2B;AACzBd,EAAAA,UAAU,CAACE,kBAAD,EAAqBK,SAArB,CAAV;AACD;;AAED,eAAe,UAAUQ,QAAV,GAAqB;AAClC,QAAMnB,GAAG,CAAC,CAACC,IAAI,CAACiB,cAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { all, fork, put, call, takeLatest } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport {\r\n  LOAD_POSTS_REQUEST,\r\n  LOAD_POSTS_FAILURE,\r\n  LOAD_POSTS_SUCCESS\r\n} from \"../reducers/post/actions\";\r\n\r\nfunction loadPostsAPI() {\r\n  return axios.get(\"/posts\");\r\n}\r\n\r\nfunction* loadPosts() {\r\n  try {\r\n    const result = yield call(loadPostsAPI);\r\n    yield put({\r\n      type: LOAD_POSTS_SUCCESS,\r\n      data: result.data\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: LOAD_POSTS_FAILURE\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadPosts() {\r\n  takeLatest(LOAD_POSTS_REQUEST, loadPosts);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([fork(watchLoadPosts)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}