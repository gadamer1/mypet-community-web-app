{"ast":null,"code":"import { all, fork, takeLatest, put, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { LOAD_USER_SUCCESS, LOAD_USER_REQUEST, LOAD_USER_FAILURE } from \"../reducers/user/actions\";\n\nfunction loadUserAPI() {\n  return axios.get(\"/user\");\n}\n\nfunction* loadUser() {\n  try {\n    const result = yield call(loadUserAPI);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOAD_USER_FAILURE\n    });\n  }\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLoadUser)]);\n}","map":{"version":3,"sources":["D:\\webdev\\mypet-community-web-app\\front\\sagas\\user.js"],"names":["all","fork","takeLatest","put","call","axios","LOAD_USER_SUCCESS","LOAD_USER_REQUEST","LOAD_USER_FAILURE","loadUserAPI","get","loadUser","result","type","data","e","console","error","watchLoadUser","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,IAArC,QAAiD,oBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,iBADF,EAEEC,iBAFF,EAGEC,iBAHF,QAIO,0BAJP;;AAMA,SAASC,WAAT,GAAuB;AACrB,SAAOJ,KAAK,CAACK,GAAN,CAAU,OAAV,CAAP;AACD;;AAED,UAAUC,QAAV,GAAqB;AACnB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMR,IAAI,CAACK,WAAD,CAAzB;AACA,UAAMN,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAEP,iBADE;AAERQ,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMZ,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAEL;AADE,KAAD,CAAT;AAGD;AACF;;AAED,UAAUU,aAAV,GAA0B;AACxB,QAAMhB,UAAU,CAACK,iBAAD,EAAoBI,QAApB,CAAhB;AACD;;AAED,eAAe,UAAUQ,QAAV,GAAqB;AAClC,QAAMnB,GAAG,CAAC,CAACC,IAAI,CAACiB,aAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { all, fork, takeLatest, put, call } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport {\r\n  LOAD_USER_SUCCESS,\r\n  LOAD_USER_REQUEST,\r\n  LOAD_USER_FAILURE\r\n} from \"../reducers/user/actions\";\r\n\r\nfunction loadUserAPI() {\r\n  return axios.get(\"/user\");\r\n}\r\n\r\nfunction* loadUser() {\r\n  try {\r\n    const result = yield call(loadUserAPI);\r\n    yield put({\r\n      type: LOAD_USER_SUCCESS,\r\n      data: result.data\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: LOAD_USER_FAILURE\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchLoadUser)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}