{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\mypet-community-web-app\\\\front\\\\components\\\\Forms\\\\LoginForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Link from \"next/link\";\nimport { LOGIN_REQUEST } from \"../../reducers/user/actions\";\n\nvar LoginForm = function LoginForm() {\n  var _useState = useState(\"\"),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(null),\n      emailValidate = _useState2[0],\n      setEmailValidate = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      password = _useState3[0],\n      setPassword = _useState3[1];\n\n  var _useState4 = useState(true),\n      check = _useState4[0],\n      setCheck = _useState4[1];\n\n  var dispatch = useDispatch(); //이메일 유효성 검사 함수\n\n  var chkEmail = function chkEmail(str) {\n    var regExp = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\n    return regExp.test(str) ? true : false;\n  }; //onClick\n  //onChange\n\n\n  var onChangeEmail = useCallback(function (e) {\n    setEmail(e.target.value);\n\n    if (chkEmail(e.target.value)) {\n      setEmailValidate(false);\n    } else {\n      setEmailValidate(\"유효한 이메일 형식이 아닙니다\");\n    }\n  }, [email, emailValidate]);\n  var onChangePassword = useCallback(function (e) {\n    setPassword(e.target.value);\n  }, [password]);\n  var onChangeCheck = useCallback(function (e) {\n    setCheck(e.target.checked);\n  }, [check]);\n  var onSubmitForm = useCallback(function (e) {\n    e.preventDefault();\n    dispatch({\n      type: LOGIN_REQUEST,\n      data: {\n        email: email,\n        password: password,\n        check: check\n      }\n    });\n  }, [email, password]);\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    onSubmit: onSubmitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"email\",\n    placeholder: \"example@email.com\",\n    id: \"name\",\n    value: email,\n    onChange: onChangeEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), emailValidate && __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, emailValidate)), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"password\",\n    placeholder: \"password\",\n    id: \"password\",\n    value: password,\n    onChange: onChangePassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"\\uB85C\\uADF8\\uC778\"), __jsx(Link, {\n    href: \"/signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")), __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    checked: check,\n    onChange: onChangeCheck,\n    name: \"remember\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), \"\\uB85C\\uADF8\\uC778 \\uC0C1\\uD0DC \\uC720\\uC9C0\")));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["D:\\webdev\\mypet-community-web-app\\front\\components\\Forms\\LoginForm.js"],"names":["React","useCallback","useState","useDispatch","Link","LOGIN_REQUEST","LoginForm","email","setEmail","emailValidate","setEmailValidate","password","setPassword","check","setCheck","dispatch","chkEmail","str","regExp","test","onChangeEmail","e","target","value","onChangePassword","onChangeCheck","checked","onSubmitForm","preventDefault","type","data"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Link from \"next/link\";\r\nimport { LOGIN_REQUEST } from \"../../reducers/user/actions\";\r\n\r\nconst LoginForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailValidate, setEmailValidate] = useState(null);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [check, setCheck] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  //이메일 유효성 검사 함수\r\n  const chkEmail = function(str) {\r\n    var regExp = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n    return regExp.test(str) ? true : false;\r\n  };\r\n\r\n  //onClick\r\n\r\n  //onChange\r\n  const onChangeEmail = useCallback(\r\n    e => {\r\n      setEmail(e.target.value);\r\n      if (chkEmail(e.target.value)) {\r\n        setEmailValidate(false);\r\n      } else {\r\n        setEmailValidate(\"유효한 이메일 형식이 아닙니다\");\r\n      }\r\n    },\r\n    [email, emailValidate]\r\n  );\r\n\r\n  const onChangePassword = useCallback(\r\n    e => {\r\n      setPassword(e.target.value);\r\n    },\r\n    [password]\r\n  );\r\n\r\n  const onChangeCheck = useCallback(\r\n    e => {\r\n      setCheck(e.target.checked);\r\n    },\r\n    [check]\r\n  );\r\n\r\n  const onSubmitForm = useCallback(\r\n    e => {\r\n      e.preventDefault();\r\n      dispatch({\r\n        type: LOGIN_REQUEST,\r\n        data: {\r\n          email,\r\n          password,\r\n          check\r\n        }\r\n      });\r\n    },\r\n    [email, password]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmitForm}>\r\n        <div>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"example@email.com\"\r\n            id=\"name\"\r\n            value={email}\r\n            onChange={onChangeEmail}\r\n          />\r\n          {emailValidate && <div>{emailValidate}</div>}\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={onChangePassword}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">로그인</button>\r\n        <Link href=\"/signup\">\r\n          <a>회원가입</a>\r\n        </Link>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={check}\r\n            onChange={onChangeCheck}\r\n            name=\"remember\"\r\n          />\r\n          로그인 상태 유지\r\n        </label>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}