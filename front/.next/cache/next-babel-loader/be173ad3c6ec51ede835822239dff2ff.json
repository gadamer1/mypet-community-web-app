{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadUser),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadUser),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(login),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogin),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(signup),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchSignup),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, takeLatest, put, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { LOAD_USER_SUCCESS, LOAD_USER_REQUEST, LOAD_USER_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from \"../reducers/user/actions\";\n\nfunction loadUserAPI() {\n  return axios.get(\"/user\");\n}\n\nfunction loadUser() {\n  var result;\n  return _regeneratorRuntime.wrap(function loadUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loadUserAPI);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: LOAD_USER_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: LOAD_USER_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchLoadUser() {\n  return _regeneratorRuntime.wrap(function watchLoadUser$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(LOAD_USER_REQUEST, loadUser);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction loginAPI(data) {\n  return axios.post(\"/user/login\", data, {\n    withCredentials: true\n  });\n}\n\nfunction login(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function login$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(loginAPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: LOGIN_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 13;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 13;\n          return put({\n            type: LOGIN_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(LOGIN_REQUEST, login);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction signupAPI(data) {\n  return axios.post(\"/user/signup\", data);\n}\n\nfunction signup(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function signup$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(signupAPI, action.data);\n\n        case 3:\n          result = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: SIGN_UP_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context5.next = 13;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error(_context5.t0);\n          _context5.next = 13;\n          return put({\n            type: SIGN_UP_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\n\nfunction watchSignup() {\n  return _regeneratorRuntime.wrap(function watchSignup$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signup);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([fork(watchLoadUser), fork(watchLogin), fork(watchSignup)]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":{"version":3,"sources":["D:\\webdev\\mypet-community-web-app\\front\\sagas\\user.js"],"names":["loadUser","watchLoadUser","login","watchLogin","signup","watchSignup","userSaga","all","fork","takeLatest","put","call","axios","LOAD_USER_SUCCESS","LOAD_USER_REQUEST","LOAD_USER_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","loadUserAPI","get","result","type","data","console","error","loginAPI","post","withCredentials","action","signupAPI"],"mappings":"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","sourcesContent":["import { all, fork, takeLatest, put, call } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport {\r\n  LOAD_USER_SUCCESS,\r\n  LOAD_USER_REQUEST,\r\n  LOAD_USER_FAILURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_UP_FAILURE\r\n} from \"../reducers/user/actions\";\r\n\r\nfunction loadUserAPI() {\r\n  return axios.get(\"/user\");\r\n}\r\n\r\nfunction* loadUser() {\r\n  try {\r\n    const result = yield call(loadUserAPI);\r\n    yield put({\r\n      type: LOAD_USER_SUCCESS,\r\n      data: result.data\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: LOAD_USER_FAILURE\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction loginAPI(data) {\r\n  return axios.post(\"/user/login\",data,{\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* login(action) {\r\n  try {\r\n    const result = yield call(loginAPI,action.data);\r\n    yield put({\r\n      type: LOGIN_SUCCESS,\r\n      data: result.data\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: LOGIN_FAILURE\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogin() {\r\n  yield takeLatest(LOGIN_REQUEST, login);\r\n}\r\n\r\n\r\nfunction signupAPI(data) {\r\n  return axios.post(\"/user/signup\",data);\r\n}\r\n\r\nfunction* signup(action) {\r\n  try {\r\n    const result = yield call(signupAPI,action.data);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n      data: result.data\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: SIGN_UP_FAILURE\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchSignup() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signup);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLoadUser),\r\n    fork(watchLogin),\r\n    fork(watchSignup),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}